// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PdrAutomate.WebUI.DataAccess.Concrete.EntityFramework;

namespace PdrAutomate.WebUI.Migrations
{
    [DbContext(typeof(PdrAutomateContext))]
    [Migration("20191116205218_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassCapacity");

                    b.Property<string>("ClassName");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.Presentation", b =>
                {
                    b.Property<int>("PresentationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PresentationName");

                    b.HasKey("PresentationId");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.PresentationClass", b =>
                {
                    b.Property<int>("PresentationId");

                    b.Property<int>("ClassId");

                    b.Property<int>("CurrentCapacity");

                    b.Property<int>("Section");

                    b.HasKey("PresentationId", "ClassId");

                    b.HasIndex("ClassId");

                    b.ToTable("PresentationClass");
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<string>("StudentSchoolId");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.StudentClass", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("ClassId");

                    b.HasKey("StudentId", "ClassId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentClass");
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.StudentPresentation", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("PresentationId");

                    b.HasKey("StudentId", "PresentationId");

                    b.HasIndex("PresentationId");

                    b.ToTable("StudentPresentation");
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.PresentationClass", b =>
                {
                    b.HasOne("PdrAutomate.WebUI.Entity.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdrAutomate.WebUI.Entity.Presentation", "Presentation")
                        .WithMany()
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.StudentClass", b =>
                {
                    b.HasOne("PdrAutomate.WebUI.Entity.Class", "Class")
                        .WithMany("StudentsClass")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdrAutomate.WebUI.Entity.Student", "Student")
                        .WithOne("ClassId")
                        .HasForeignKey("PdrAutomate.WebUI.Entity.StudentClass", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PdrAutomate.WebUI.Entity.StudentPresentation", b =>
                {
                    b.HasOne("PdrAutomate.WebUI.Entity.Presentation", "Presentation")
                        .WithMany()
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PdrAutomate.WebUI.Entity.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
